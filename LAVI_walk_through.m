%LAVI walk-through
%Generates LAVI and LAVI + ABBA plots from the averaged LAVI and PINK noises
%Add the LAVI toolbox to your Matlab path
% Construct LAVI path
LAVIpath = '/Users/claudiagoh/Desktop/MATLAB/LAVI-main'; % Location of the LAVI toolbox
addpath(LAVIpath); % Add the toolbox to the MATLAB path

%Load FOI and Parameters
% Frequencies of interest and other parameters
foi         = 10.^(log10(1):0.025:log10(40)); % frequencies of interest
fsample     = 1000;              % sampling frequency
lag         = 1.5;               % lag between the signal and its copy (in cycles, default = 1.5)
width       = 5;                 % wavelet width (in cycles, default = 5)
pink_reps   = 100;               % number of simulations created per channel. Default = 20.


%Load processed data
%Data should contain: LAVI_avg, PINK_avg, and sigVect2
%LAVI_avg: a matrix with N_chan x foi of processed data, where LAVI values are averaged across epochs
%PINK_avg: a matrix with 100 x foi x N_chan of processed data, where 100 generated PINK values are averaged across epochs
%sigVect2: 1 x 8 cell, each cell contains a 1 x 65 double showing the significance of LAVI values
% Construct the .mat path
dataFileName = fullfile(LAVIpath, 'LAVI_results/BLA/4 min epoch avg/aw_avg.mat'); % 
% Load the .mat file
loaded_struct = load(dataFileName);

% Get the field names
fieldNames = fieldnames(loaded_struct);
disp('Field names in the loaded structure:');
disp(fieldNames);
LAVI_avg = loaded_struct.LAVI_avg
PINK_avg = loaded_struct.PINK_avg

%Plot Averaged LAVI
figure(646); clf; hold on
set(gcf,'position',[680 400 800 600]);
plot(foi, LAVI_avg);
set(gca,'xscale','log','xtick',[2:2:10,20:10:foi(end)]);
xlim([1, 40]) %default = 0.5-120
ylim([0,1])

% Create default labels for the legend based on the number of channels
numChannels = size(LAVI_avg, 1);  % Assuming myDataNumeric has channels as rows
defaultLabels = arrayfun(@(x) sprintf('Channel %d', x), 1:numChannels, 'UniformOutput', false);
legend(defaultLabels, 'Location', 'northeastoutside');  % Places the legend outside the plot area


% Set axis labels
xlabel('Frequency (Hz)');   % X-axis label
ylabel('LAVI value');              % Y-axis label
title('r14-Habituation-HPC-QW-new1');  % Title for the plot

%Calculate the borders using ABBA
%The function ABBA accepts up to 5 input arguments:
%1. LAVI: as calculated above by Prepare_LAVI
%2. foi (frequencies of interest): should be the same as used for calculating LAVI
%3. alpha_range: the frequency range in which we expact to find alpha. The band of a peak in this range will be assigned the index 0, bands with lower frequency will be assigned with negative indices, and above with positive indices. Default: [6 14]  
%4. sig_lim: definition of significance levels per frequency. There are three alternatives to define sig_lim:
    %a. Using a table based on pre-calculated pink-noise simulations. This table can be generated by the script General_SigLims.m to match data's duration, sampling rate, and aperiodic slope.
    %b. Simulating pink-noise that matches the power spectrum of the data.
    %c. Leaving empty. In this case, the bands will be found, but without meaningful statistical inference.
%For more details, see supplementary text - 'Parametrical effects on rhythmicity measures' and supplementary figure S5 of Karvat et al (2024).
%5. perFreq: a boolean defining whether the siginificance level per frequency (1), or as the minimum/ maximum over all frequencies (0, default).
%ABBA has 3 possible outputs: 
%borders: 1 x Nchan cell array, with a matrix of bands' details per channel (each row is a band, the meaning of columns explained in col_names). 
%col_names: 11x1 cell array with the names of variables in the borders matrix. In detail: 1. BegI: the Index of band Beginning 2. EndI: the Index of band Ending 3. PeakI: the Index of band Peak/trough (maximal/ minimal LAVI) 4. BegF: the Frequency of band Beginning 5. EndF: the Frequency of band Ending 6. PeakF: the Frequency of band Peak/trough (maximal/ minimal LAVI) 7. PeakLAVI: the LAVI value at the peak/ trough 8. PeakRel: the difference between PeakLAVI and the median 9. Dir: Direction of the PeakLAVI. 1= Peak ("sustained bands"), -1= Trough ("transient bands"). 10.Rel_alpha: band identity. Alpha= 0. Lower frequency bands get negative integers, Higher frequency positive integers. 11.Sig: bool, Significance relative to pink noise simulations (1- the peak/ trough was higher/ lower than the pink noise distribution, 0 otherwise).
%sigVect: 1 x Nchan cell array, with 1 x Nfreq vector per channel of statistical inference per frequency. 

%Calculate LAVI of the pink-noise simulations
 pink = permute(PINK_avg,[3,2,1]);                    % dimord: chan_freq_rep
 sig_lim = cat(3,min(pink,[],3), max(pink,[],3)); % dimord: chan_freq_min/max
 alpha_range = [6 8];                            % same as in option A
 [borders2,~,sigVect2] = ABBA(LAVI_avg, foi, alpha_range, sig_lim, 0);

% Save sigVect2 to the same file
save(dataFileName, 'sigVect2', '-append'); % Append sigVect2 to the existing file


%Plot Averaged LAVI and ABBA
%Each channel will be plotted in a separate subplot.
%Black: LAVI of averaged data.  
%Pink: LAVI of averaged pink simulations. 
%Green: significantly increased bands.
%Blue: significantly decreased bands.
figure(456); clf; hold on
cols = 3;
rows = ceil(size(LAVI_avg, 1) / cols);
set(gcf, 'position', [580 480 560 120 * rows]);
cachol = [83 174 244] / 255; % blue colour
varod = [230 89 106] / 255; % pink colour
yarok = [108 192 12] / 255; % green colour

for chi = 1:size(LAVI_avg,1)
    subplot(rows,cols,chi); hold on
    if exist('pink')==1 && ~isempty(PINK_avg) % plot pink simulations, only if were generated
        plot(foi, squeeze(PINK_avg(:,:,chi)),'color',ones(1,3)*0.5,'color',varod);
    end
    plot(foi, LAVI_avg(chi,:),'k','linewidth',1.5);
    ylim([0.1 0.8])
    posind = sigVect2{chi}>0;
    negind = sigVect2{chi}<0;
    scatter(foi(posind), ones(1,sum(posind))*0.1,35,yarok,'fill','s');
    scatter(foi(negind), ones(1,sum(negind))*0.1,35,cachol,'fill','s');
    
    set(gca,'xscale','log','xtick',[2:2:10,20:10:foi(end)])
    if mod(chi,cols)==1, ylabel('LAVI'); end
    xlabel('Frequency (hz)')
    title(sprintf('Channel %u',chi))
end
